{
  "version": "1",
  "description": "Free open-source C/C++/Fortran IDE (includes additional GCC/G++ compiler and GDB debugger)",
  "homepage": "http://www.codeblocks.org",
  "license": {
    "identifier": "GPL-3.0-or-later"
  },
  "depends": [
    "mingw-winlibs"
  ],
  "architecture": {
    "64bit": {
      "hash": [
        "d6e9664075934140c19a34c1bf53c67b69909e7feef97ba5cb7ddbe850312d81",
        "58b73d8ed20bab747546bee69e7e1935da141f66ddcf936f87fcc11f1a691241",
        "56f955ca5addd9acf51503e0e68efbca9e219d92264ce4cb2a6683f19afe3b4d"
      ],
      "url": [
        "https://downloads.sourceforge.net/projects/codeblocks/files/Binaries/Nightlies/2024/CB_20241208_rev13596_win64.7z",
        "https://downloads.sourceforge.net/project/codeblocks/Binaries/Nightlies/Prerequisites/Mingw64dlls8.1.0.7z",
        "https://downloads.sourceforge.net/project/codeblocks/Binaries/Nightlies/Prerequisites/wxmsw31u_gcc_cb_wx311_gcc810-mingw64.7z"
      ]
    }
  },
  "bin": [
    [
      "codeblocks.exe",
      "codeblocks-nightly"
    ]
  ],
  "shortcuts": [
    [
      "codeblocks.exe",
      "CodeBlocks Nightly"
    ]
  ],
  "checkver": {
    "script": [
      "$mainContent = (Invoke-WebRequest 'https://sourceforge.net/projects/codeblocks/rss?path=/Binaries/Nightlies/' -UseBasicParsing).Content;",
      "$preReqContent = (Invoke-WebRequest 'https://sourceforge.net/projects/codeblocks/rss?path=/Binaries/Nightlies/Prerequisites/' -UseBasicParsing).Content;",
      "$r1 = [regex]::Match($mainContent, '/Binaries/Nightlies/(?<year>\\d{4})/CB_(?<date>\\d{8})_rev(?<cbVersion>\\d{5})_win64\\.7z');",
      "$r2 = [regex]::Match($preReqContent, '/Binaries/Nightlies/Prerequisites/Mingw64dlls(?<mingwVersion>[\\d.]+)\\.7z');",
      "$r3 = [regex]::Match($preReqContent, '/Binaries/Nightlies/Prerequisites/wxmsw(?<wxArch>\\d+u?)_gcc_cb_wx(?<wxVersion>\\d+)_2D_gcc(?<gccVersion>\\d+)-mingw64\\.7z');",
      "if ($r1.Success -and $r2.Success -and $r3.Success) {",
      "    $version = \"$($r1.Groups['cbVersion'].Value)$($r2.Groups['mingwVersion'].Value)$($r3.Groups['wxVersion'].Value)$($r3.Groups['gccVersion'].Value)\" -replace '\\.', '';",
      "    Write-Output \"$version $($r1.Groups['year'].Value) $($r1.Groups['date'].Value) $($r1.Groups['cbVersion'].Value) $($r2.Groups['mingwVersion'].Value) $($r3.Groups['wxArch'].Value) $($r3.Groups['wxVersion'].Value) $($r3.Groups['gccVersion'].Value)\";",
      "} else {",
      "    throw 'Error: Version check failed. One or more regex patterns did not match.'",
      "}"
    ],
    "regex": "(?<version>.+)\\s(?<year>.+)\\s(?<date>.+)\\s(?<cbver>.+)\\s(?<mingwver>.+)\\s(?<wxarch>.+)\\s(?<wxver>.+)\\s(?<gccver>.+)",
    "replace": "${version}"
  },
  "autoupdate": {
    "architecture": {
      "64bit": {
        "url": [
          "https://downloads.sourceforge.net/projects/codeblocks/files/Binaries/Nightlies/$matchYear/CB_$matchDate_rev$matchCbver_win64.7z",
          "https://downloads.sourceforge.net/project/codeblocks/Binaries/Nightlies/Prerequisites/Mingw64dlls$matchMingwver.7z",
          "https://downloads.sourceforge.net/project/codeblocks/Binaries/Nightlies/Prerequisites/wxmsw$matchWxarch_gcc_cb_wx$matchWxver_2D_gcc$matchGccver-mingw64.7z"
        ]
      }
    }
  }
}
